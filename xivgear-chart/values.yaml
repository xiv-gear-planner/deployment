xivgear-static:

  deploymentAnnotations: &deployAnn
    keel.sh/policy: "force"
    keel.sh/trigger: "poll"
    keel.sh/pollSchedule: "@every 2m"
    keel.sh/match-tag: "true"


  replicaCount: 2

  image:
    repository: ghcr.io/xiv-gear-planner/xivgear-static
    pullPolicy: Always
    tag: "prod"

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-production"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
#      nginx.ingress.kubernetes.io/rewrite-target: /$1
    hosts:
      - host: 'xivgear.app'
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: 'www.xivgear.app'
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: 'ok.xivgear.app'
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: letsencrypt-production-static
        hosts:
          - "ok.xivgear.app"

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

xivgear-storage-api:

  deploymentAnnotations: *deployAnn

  replicaCount: 2

  image:
    repository: ghcr.io/xiv-gear-planner/gear-planner-server
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "master"

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Automatically mount a ServiceAccount's API credentials?
    automount: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      cert-manager.io/cluster-issuer: "letsencrypt-production"
    hosts:
      - host: 'api.xivgear.app'
        paths:
          - path: /(.*)
            pathType: ImplementationSpecific
      - host: 'share.xivgear.app'
        paths:
          - path: /(.*)
            pathType: ImplementationSpecific
    tls:
      - secretName: letsencrypt-production-api
        hosts:
          - "api.xivgear.app"
          - "share.xivgear.app"


xivgear-beta:

  deploymentAnnotations: *deployAnn
  image:
    pullPolicy: Always

xivgear-btest:

  nameOverride: xivgear-btest

  deploymentAnnotations: *deployAnn
  image:
    pullPolicy: Always
    tag: "btest"

  ingress:
    enabled: true
    hosts:
      - host: 'btest.xivgear.app'
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: letsencrypt-production-btest
        hosts:
          - "btest.xivgear.app"

xivgear-stats-api:
  deploymentAnnotations: *deployAnn
  image:
    pullPolicy: Always
    repository: ghcr.io/xiv-gear-planner/xivgear-stats-server-test
    tag: "stats-server"
